name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Build with password injection
        run: |
          # Create build directory
          mkdir -p _site
          
          # Copy all files except hidden directories and _site itself
          find . -maxdepth 1 -name ".*" -prune -o -name "_site" -prune -o -type f -exec cp {} _site/ \;
          
          # Copy directories (css, js, images, etc.) but exclude hidden ones
          for dir in */; do
            if [[ "$dir" != "_site/" ]] && [[ "$dir" != .* ]]; then
              cp -r "$dir" _site/
            fi
          done
          
          # Create config.js with password from secret (more reliable than sed)
          mkdir -p _site/js
          echo "// Auto-generated password configuration" > _site/js/config.js
          echo "window.WEDDING_PASSWORD = '${{ secrets.WEDDING_PASSWORD }}';" >> _site/js/config.js
          
          # Verify the config file was created
          echo "Password config created:"
          cat _site/js/config.js
          
          # List what was copied for debugging
          echo "Build contents:"
          ls -la _site/
          ls -la _site/js/
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4